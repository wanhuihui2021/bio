#!/bin/bash

function help()
{
cat<<END

Usage: $(readlink -f ${0}) [options] [arg]
Required: 
	-i | --inputfile [vcf file]
	-s | --stats [output stats file]
	-t | --htmlStats [output htmlStats file]
	-o | --outfile [output file names]
Optional:
	--java [java path]
	--snpEff [snpEff path]
General:
	-h | --help [Show the help message]

Analysis Programs Created by wanhuihui [v1.1]
END
exit 0
}
 
ARGS=`getopt -o "hi:o:s:t:" -l "inputfile:,outfile:,stats:,htmlStats:,java:,snpEff:,help" -n $0 -- "$@"`
 
eval set -- "${ARGS}"
 
while true; do
    case "${1}" in
		-i|--inputfile)
        shift;
		inputfile=$(readlink -f ${1});shift
		if [[ ! -f ${inputfile} ]]; then
			echo "ERROR: inputfile [${inputfile}] is not exist";shift;help;
        fi
        ;;
		-s|--stats)
        shift;
		stats=$(readlink -f ${1});shift
        ;;
		-t|--htmlStats)
        shift;
		htmlStats=$(readlink -f ${1});shift
        ;;
		--java)
        shift;
		java=$(readlink -f ${1});shift
		if [[ ! -f ${java} ]]; then
			echo "ERROR: java [${java}] is not exist";shift;help;
        fi
        ;;
		--snpEff)
        shift;
		snpEff=$(readlink -f ${1});shift
		if [[ ! -f ${snpEff} ]]; then
			echo "ERROR: snpEff [${snpEff}] is not exist";shift;help;
        fi
        ;;
		-o|--outfile)
        shift;
		outfile=$(readlink -f ${1});shift
		;;
		-h|--help)
        shift;help;exit
		;;
        --)
        shift;
        break;
        ;;
    esac
done

if [[ ! -n ${inputfile} || ! -n ${outfile} || ! -n ${stats} || ! -n ${htmlStats} ]];then help;fi
if [[ ! -n ${java} ]];then java=`which java`;fi
if [[ ! -n ${snpEff} ]];then snpEff=`which snpEff`;fi

function snpEff_analysis()
{
	$java -jar $snpEff hg19 $inputfile -stats $stats -htmlStats $htmlStats > $outfile
}
snpEff_analysis